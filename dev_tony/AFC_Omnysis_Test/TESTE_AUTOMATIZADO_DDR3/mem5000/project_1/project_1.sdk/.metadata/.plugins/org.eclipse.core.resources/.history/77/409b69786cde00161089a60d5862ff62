#include <stdio.h>
#include "xparameters.h"
#include "xil_types.h"
#include "xstatus.h"
#include "xil_testmem.h"
#include "xtmrctr_l.h"
#include "platform.h"
#include "memory_config.h"
#include "xil_printf.h"
#include "xintc_l.h"
#include "xil_io.h"
#include "xil_exception.h"
#include "interr.h"
#include "xil_testmem.h"
#include "xil_io.h"
#include "xil_assert.h"
#include "xtmrctr.h"


void putnum(unsigned int num);
s32 Xil_TestMem32(struct memory_range_s *range);

void test_memory_range(struct memory_range_s *range) {
    XStatus status;

    print("Testing memory region: "); print(range->name);  print("\n\r");
    print("    Memory Controller: "); print(range->ip);  print("\n\r");
    #ifdef __MICROBLAZE__
        print("         Base Address: 0x"); putnum(range->base); print("\n\r");
        print("                 Size: 0x"); putnum(range->size); print (" bytes \n\r");
    #else
        xil_printf("         Base Address: 0x%08x \n\r",range->base);
        xil_printf("                 Size: 0x%08x bytes \n\r",range->size);
    #endif

    status = Xil_TestMem32(range);
    print("          32-bit test: "); print(status == XST_SUCCESS? "PASSED!":"FAILED!"); print("\n\r");
    print("\n\r");
    print("\n\r");
    print("\n\r");
	print("                              Type 'exit' to leave ");print("\n\r");
	print("\n\r");print("\n\r");print("\n\r");



}

s32 Xil_TestMem32(struct memory_range_s *range)
{
	int offset = range->base + 0;
		char *addr = (char*)(offset);

		char Val;
		char FirtVal = 1;
		u32 WordMem32;
		xil_printf("     BLOCK 1 \n\r");
		Val = FirtVal;

		int I = 0;
		while( (I + offset) < (67108864 + range->base) )
		{
			*(addr + I) = Val;
			Val++;
			I++;
		}
		xil_printf("     1 of 32 WRITTEN\n\r");









		return(0);

}



int main()
{

    init_platform();

    print("--Starting Memory Test Application--\n\r");
    print("NOTE: This application runs with D-Cache disabled.");
    print("As a result, cacheline requests will not be generated\n\r");


        test_memory_range(&memory_ranges[0]);

    print("--Memory Test Application Complete--\n\r");

    cleanup_platform();

return(0);
}
